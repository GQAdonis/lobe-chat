name: lobe-chat-database
services:
  postgresql:
    image: pgvector/pgvector:pg16
    container_name: lobe-postgres
    ports:
      - '25434:5432'
    volumes:
      - './data:/var/lib/postgresql/data'
    environment:
      - 'POSTGRES_DB=logto'
      - 'POSTGRES_PASSWORD=uWNZugjBqixf8dxC'
      - 'POSTGRES_USER=postgres'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  postgresql-lobe:
    image: pgvector/pgvector:pg16
    container_name: lobe-postgres-app
    ports:
      - '25435:5432'
    volumes:
      - './lobe_data:/var/lib/postgresql/data'
    environment:
      - 'POSTGRES_DB=lobe'
      - 'POSTGRES_PASSWORD=uWNZugjBqixf8dxC'
      - 'POSTGRES_USER=postgres'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  minio:
    image: minio/minio:latest
    container_name: lobe-minio
    ports:
      - '29000:9000'
      - '29001:9001'
    volumes:
      - './s3_data:/data'
    environment:
      - 'MINIO_ROOT_USER=lobe_minio_user'
      - 'MINIO_ROOT_PASSWORD=lobe_minio_password_123'
    restart: always
    command: >
      server /data --address ":9000" --console-address ":9001"

  logto:
    image: svhd/logto:latest
    container_name: lobe-logto
    ports:
      - '23001:3001'  # API endpoint
      - '23002:3002'  # Admin console
    depends_on:
      postgresql:
        condition: service_healthy
    environment:
      - 'TRUST_PROXY_HEADER=1'
      - 'DB_URL=postgresql://postgres:uWNZugjBqixf8dxC@postgresql:5432/logto'
      - 'ENDPOINT=https://auth.prometheusags.ai'  # OIDC API domain
      - 'ADMIN_ENDPOINT=https://admin.prometheusags.ai'  # Admin console domain
    entrypoint: ['sh', '-c', 'npm run cli db seed -- --swe && npm start']
    restart: always

  lobe:
    image: tribehealth/lobechat:08093035
    container_name: lobe-chat
    ports:
      - '23210:3210'
    depends_on:
      - postgresql-lobe
      - minio
      - logto
    env_file:
      - .env
    restart: always

volumes:
  data:
    driver: local
  lobe_data:
    driver: local
  s3_data:
    driver: local
